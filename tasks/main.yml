---
# First we check to see if there are existing TLS keys and certificates
# I decided it was safer to just abort if there are rather than risk
# overwriting an active key/cert.
- name: Check for existing private key
  stat: path=tls/burp.key
  become: no
  delegate_to: 127.0.0.1
  register: existing_key

- name: Check for existing PKCS8 private key
  stat: path=tls/{{ burp_key }}
  become: no
  delegate_to: 127.0.0.1
  register: existing_pkcs8_key

- name: Check for existing CSR
  stat: path=tls/burp.csr
  become: no
  delegate_to: 127.0.0.1
  register: existing_csr

- name: Check for existing certificate
  stat: path=tls/{{ burp_cert }}
  become: no
  delegate_to: 127.0.0.1
  register: existing_cert

- name: Generate private key
  command: openssl genrsa -out tls/burp.key 2048
  delegate_to: 127.0.0.1
  become: no
  when:
    - generate_self_signed_certs
    - not existing_key.stat.exists
  tags:
    - tls

- name: Convert RSA private key to PKCS8
  command: openssl pkcs8 -topk8 -inform PEM -in tls/burp.key -outform PEM -out tls/{{ burp_key }} -nocrypt
  delegate_to: 127.0.0.1
  become: no
  when:
    - generate_self_signed_certs
    - not existing_pkcs8_key.stat.exists
  tags:
    - tls

- name: Generate CSR
  command: openssl req -new -key tls/burp.key -out tls/burp.csr -subj "/C={{ country }}/ST={{ state }}/L={{ locality }}/O={{ organisation }}/OU={{ organisational_unit }}/CN=*.{{ burp_server_domain }}"
  delegate_to: 127.0.0.1
  become: no
  when:
    - generate_self_signed_certs
    - not existing_csr.stat.exists
  tags:
    - tls

- name: Generate self-signed certificate
  command: openssl x509 -req -sha256 -days 365 -in tls/burp.csr -signkey tls/burp.key -out tls/{{ burp_cert }}
  delegate_to: 127.0.0.1
  become: no
  when:
    - generate_self_signed_certs
    - not existing_cert.stat.exists
  tags:
    - tls
    - selfsign

- name: Set up directory for Burp jar
  file: dest=/usr/share/burp mode=0755 state=directory owner=root group=root
  tags:
    - setup

- name: Set up directory for Burp config
  file: dest=/etc/burp mode=0755 state=directory owner=root group=root
  tags:
    - setup

- name: Copy Burp jar
  copy: src={{ item }} dest=/usr/share/burp/burpsuite_pro.jar
  with_fileglob:
    - "{{ playbook_dir }}/burpsuite*.jar"
  tags:
    - installjar
    - setup

- name: Copy over server key
  copy: src=tls/{{ burp_key }} dest=/etc/burp/burp.pk8
  tags:
    - setup

- name: Copy over server cert
  copy: src=tls/{{ burp_cert }} dest=/etc/burp/burp.crt
  tags:
    - setup

- name: Copy over CA bundle certificates
  copy: src=tls/{{ burp_ca_bundle }} dest=/etc/burp/intermediate.crt
  tags:
    - setup

- name: Copy systemd job
  copy: src={{ role_path }}/files/burp.service dest=/etc/systemd/system/burp.service owner=root group=root
  tags:
    - setup
    - systemd

- name: Generate configuration file
  template: src={{ role_path }}/templates/collaborator.config.j2 dest=/etc/burp/collaborator.config
  tags:
    - configure

- name: Restart Burp collaborator server
  systemd: name=burp state=restarted
  tags:
    - installjar
    - configure
